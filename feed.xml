<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-03-06T06:29:50+00:00</updated><id>/feed.xml</id><title type="html">Vernacular.ai Tech</title><subtitle>Speech Technology from Vernacular.ai</subtitle><entry><title type="html">Our new Tech blog</title><link href="/new-blog/" rel="alternate" type="text/html" title="Our new Tech blog" /><published>2021-02-28T00:00:00+00:00</published><updated>2021-02-28T00:00:00+00:00</updated><id>/new-blog</id><content type="html" xml:base="/new-blog/">&lt;p&gt;We are merging past webpages of our
&lt;a href=&quot;https://vernacular-ai.github.io/engineering/&quot;&gt;Engineering&lt;/a&gt; and
&lt;a href=&quot;https://vernacular-ai.github.io/ml/&quot;&gt;ML&lt;/a&gt; team in this new, central, Vernacular
Tech page. From here on, this is going to be the main source of updates on
speech technology work from &lt;a href=&quot;https://vernacular.ai&quot;&gt;Vernacular.ai&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Stay tuned to our &lt;a href=&quot;/feed.xml&quot;&gt;rss feed&lt;/a&gt; for updates.&lt;/p&gt;</content><author><name>Abhinav Tushar</name></author><category term="Engineering" /><category term="Machine Learning" /><category term="sticky" /><summary type="html">We are merging past webpages of our Engineering and ML team in this new, central, Vernacular Tech page. From here on, this is going to be the main source of updates on speech technology work from Vernacular.ai.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/demo1.jpg" /><media:content medium="image" url="/assets/images/demo1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">EMNLP 2020</title><link href="/emnlp/" rel="alternate" type="text/html" title="EMNLP 2020" /><published>2020-12-21T00:00:00+00:00</published><updated>2020-12-21T00:00:00+00:00</updated><id>/emnlp</id><content type="html" xml:base="/emnlp/">&lt;p&gt;Individual summary notes from &lt;a href=&quot;https://2020.emnlp.org/&quot;&gt;EMNLP 2020&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ltbringer.github.io/blog&quot;&gt;Amresh&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I have recently been following the branch of model explainability for practical
purposes. I was delighted to know EMNLP was experiencing a surge of similar
research. I encountered Minumum Description Length (MDL) as a measure to
understand a model’s ability to capture linguistic properties. The core idea
being changing the probing task of identifying labels to transmitting data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/karthik19967829&quot;&gt;Karthik&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Dialogue and Interactive systems track in EMNLP was very interesting and
introduced novel techniques and approaches to some of the ML problems that I am
currently working on for example, MAD-X: a framework for effective transfer
learning to new languages using adapter base architecture , TOD-BERT:
Pre-training Transformer LMs on open-source dialogue data-sets for better
few-short learning capability this could be helpful to mitigate cold-start
problem of SLU module. Also the generative approach based papers for dialogue
state tracking were an interesting approach that might have few-shot learning
capability as compared to discriminative ones.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lohith-anandan&quot;&gt;Lohith&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Productising” ML Models has become one of the primary answers for most of the
complex problem we face in day to day life, and explaining how they work, has
become a bigger concern. I was happy to see a lot of papers and demos in that
direction, like the LIT tool, which helps both the developer and the user to
understand the underlying workings of an ML model and how it looks at each input
and how they help in the decision making process. I was glad to see a lot of
papers working with various NLP techniques for better and efficient Health Care
for people, which we can all say is more important than ever, given what we have
seen this year.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/janaab11&quot;&gt;Manas&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Insights from Negative Results in NLP, Workshop was a highlight for me. It
revolved around ideas of what an interesting question is and how to connect
ideas that didn’t work out. These questions feel central to our research efforts
in-team, and the keynotes offered a rewarding and scientific route to exploring
open problems in speech tech.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/swarajdalmia&quot;&gt;Swaraj&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The papers i liked from this year’s EMNLP were : “Incremental Processing in the
Age of Non-Incremental Encoders” by Madureira, B., &amp;amp; Schlangen, D (2020), which
was similar to how humans incrementally process natural language and provided a
way to probe the workings of transformer encoders; and “Digital Voicing of
Silent Speech” by Gaddy, D., &amp;amp; Klein, D. (2020) which was presented very well
and i felt they did a good job modelling the EMG features and got good
improvements on silent speech. There were a lot of papers and workshops on
interpretability of models which is essential considering the direction where
the field is heading and the gather sessions did a good job of ensuring one
doesn’t miss out on the social aspects of attending a conference.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Kumarmanas Nethil</name></author><category term="Machine Learning" /><category term="conference" /><summary type="html">Individual summary notes from EMNLP 2020.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/demo1.jpg" /><media:content medium="image" url="/assets/images/demo1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Normalizing Flows - Part 1</title><link href="/normalizing-flows/" rel="alternate" type="text/html" title="Normalizing Flows - Part 1" /><published>2020-12-19T00:00:00+00:00</published><updated>2020-12-19T00:00:00+00:00</updated><id>/normalizing-flows</id><content type="html" xml:base="/normalizing-flows/">&lt;p&gt;Normalizing flows, popularized by &lt;a href=&quot;https://arxiv.org/abs/1505.05770&quot;&gt;(Rezende, &amp;amp; Mohamed,
2015)&lt;/a&gt;, are techniques used in machine
learning to transform simple probability distribution functions into
complicated ones. One of the popular use cases is in generative modelling - an
unsupervised learning method - where the goal is to model a probability
distribution given samples drawn from that distribution.&lt;/p&gt;

&lt;h2 id=&quot;why-bother-about-normalizing-flows&quot;&gt;Why bother about normalizing flows?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;They have been used in many TTS (text-to-speech) models, memorably in the
&lt;a href=&quot;http://proceedings.mlr.press/v80/oord18a/oord18a.pdf&quot;&gt;Parallel WaveNet
model&lt;/a&gt; (2017) where a
clever application of normalizing flows resulted in a 1000 times faster
generation of audio samples in comparison to the original
&lt;a href=&quot;https://arxiv.org/abs/1609.03499&quot;&gt;WaveNet&lt;/a&gt; model. The Parallel WaveNet model
was also deployed on Google assistant for real-time generation of audio.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Normally a back-propagation pass requires the activation value for each
neuron to be stored in memory. This places a restriction on training deeper,
wider models on single GPU’s(since GPU’s have limited memory) and forces one
to use small batch sizes during training. In flow based networks, one does
not need to store the activations at all, as they can be &lt;a href=&quot;https://ameroyer.github.io/reading-notes/architectures/2019/05/07/the_reversible_residual_network.html&quot;&gt;reconstructed
online&lt;/a&gt;
during the back-propagation. This property was leveraged in the &lt;a href=&quot;https://arxiv.org/abs/1707.04585&quot;&gt;RevNets
paper&lt;/a&gt; (2017) which uses invertible
residual blocks. Reducing the memory cost of storing activations
significantly improve the ability to efficiently train wider and deeper
networks.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://arxiv.org/pdf/2005.05957.pdf&quot;&gt;Flowtron&lt;/a&gt; (2020), an autoregressive
flow based TTS model does a kind of representation learning using normalizing
flows to learn an invertible mapping from a data space to a latent space
which can be manipulated to control many aspects of speech synthesis (pitch,
tone, speech rate, cadence, accent). Flowtron matches state-of-the-art TTS
models in terms of speech quality and is able to transfer speech
characteristics from a source speaker to a target speaker, making the target
speaker sound more expressive.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you’ve ever thought about reversible networks, Normalizing flows do
precisely that. Reversibility of flows also means that one can trivially
encode images into the latent space for editing. They also have cool
mathematical applications, for example their use in &lt;a href=&quot;https://arxiv.org/pdf/1806.07366.pdf&quot;&gt;Neural ODE
solvers&lt;/a&gt; (2019.) which use continuous
normalizing flows.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;brief-introduction&quot;&gt;Brief Introduction&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Definition&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;:&lt;/em&gt; A Normalizing Flow is a transformation of a simple
probability distribution into a more complex distribution by a sequence of
invertible and differentiable mappings.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;: The above formalism is a simplification, for a more precise
definition one can consult [5]. The formalism allows piecewise continuous
functions to be used in the construction of the flow which the above
definition restricts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Normalizing&lt;/strong&gt; since the transformed distribution needs to be normalized by
the change of variables formula (discussed below). &lt;strong&gt;Flow&lt;/strong&gt; refers to the
series of invertible transformations which are composed with each other to
create more complex invertible transformations.&lt;/p&gt;

&lt;p&gt;When applied as density estimators, some NFs provide a general way of
constructing &lt;strong&gt;flexible&lt;/strong&gt; probability distributions over continuous random
variables starting from a simple probability distribution. By constraining the
transformations to be invertible, Flow-based models provide a tractable method
to calculate the exact likelihood for a wide variety of generative modeling
problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Efficient inference and efficient synthesis:&lt;/strong&gt; Autoregressive models, such as
the &lt;a href=&quot;https://arxiv.org/pdf/1606.05328.pdf&quot;&gt;PixelCNN&lt;/a&gt;, are also reversible,
however synthesis from such models is difficult to parallelize, and typically
inefficient on parallel hardware. Flow-based generative models like
&lt;a href=&quot;https://arxiv.org/abs/1807.03039&quot;&gt;Glow&lt;/a&gt; (and RealNVP) are efficient to
parallelize for both training and synthesis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exact latent-variable inference:&lt;/strong&gt; Within the class of exact likelihood
models, normalizing flows provide two key advantages: model flexibility and
generation speed. Flows have been explored both to increase the flexibility of
the variational posterior in the context of variational autoencoders (VAEs),
and directly as a generative model.  With VAEs, one is able to infer only
approximately the value of the latent variables that correspond to a datapoint.
GAN’s have no encoder at all to infer the latents. In flow based generative
models, this can be done exactly without approximation. Not only does this lead
to accurate inference, it also enables optimization of the exact log-likelihood
of the data, instead of a lower bound of it.&lt;/p&gt;

&lt;h2 id=&quot;mathematical-framework&quot;&gt;Mathematical Framework&lt;/h2&gt;

&lt;p&gt;Let, \(z_0\) be a continuous random variable belonging to a simple probability distribution \(p_\theta(z_0)\) . Let it be a Gaussian with parameters \((\mu, \sigma) = (0,1)\).&lt;/p&gt;

\[z_0 \sim p_\theta (z_0) = N(z_0;0,1)\]

&lt;p&gt;Normalizing flows transforms the simple distribution, into a desired output probability distribution with random variable \(x\), with a sequence of invertible transformations, \(f_i's\).&lt;/p&gt;

\[z_k = f_\theta (z_0) = f_k...f_2.f_1(z_0) \text{ s.t. each $f_i$ is invertible (bijective)}\]

&lt;p&gt;The composition of all the individual flows is represented by \(f_\theta\). Since each \(f_i\) is bijective, so is \(f_\theta\). The new density \(p_\theta (z_k)\) is called a &lt;em&gt;push forward&lt;/em&gt; of the initial density \(p_\theta(z_0)\) by the function \(f_\theta.\)&lt;/p&gt;

&lt;p&gt;An example of a transformation obtained by a normalizing flow is shown below, which transforms a base gaussian distribution into a target multi-modal distribution with the help of a bijective function.&lt;/p&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/normalizing-flows/normalizing_flow.jpg&quot; /&gt;
  &lt;figcaption&gt;Fig 1: The transformation of a base distribution into a target distribution using a bijective function f.&lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;The constrains of a distribution being a probability distribution is that \(\int p_\theta (z_0) =1\). However, this doesn’t hold after applying a bijective function (for intuition consider \(f_1 : z \rightarrow z^3\)).&lt;/p&gt;

&lt;h2 id=&quot;change-of-variables-formula&quot;&gt;Change of Variables Formula&lt;/h2&gt;

&lt;p&gt;Consider the normalizing flow \(f_1 : Z_0 \rightarrow Z_1\).  If we want the probability distribution of the random variable \(z_1 \sim Z_1\), we need to consider the &lt;em&gt;change of variables formula&lt;/em&gt; derived below.&lt;/p&gt;

&lt;p&gt;Consider the event \(z_0 \sim Z\), mapped to \(z_1 \sim Z_1\) s.t. \(f_1(z_0) = z_1\). Since, the mapping is bijective, the probabilities of the events are the same. Therefore,&lt;/p&gt;

\[p_\theta(z_1)*\partial z_1 = p_\theta(z_0)*\partial z_0\]

\[p_\theta(z_1) = p_\theta(z_0)* \frac{\partial z_0}{\partial z_1}\]

\[p_\theta(z_1) = p_\theta(z_0)* |\frac{\partial z_0}{\partial z_1}|\]

&lt;p&gt;(since probabilities are always &amp;gt; 0)&lt;/p&gt;

\[p_\theta(z_1) = p_\theta(z_0)* |\frac{\partial z_0}{\partial f_1(z_0)}|\]

&lt;p&gt;(\(z_1 = f_1(z_0)\))&lt;/p&gt;

\[p_\theta(z_1) = p_\theta(z_0)* |\frac{\partial f_1(z_0)}{\partial z_0}|^{-1}\]

&lt;p&gt;In the multivariate case (\(R^D \rightarrow R^D\)) this generalises to:&lt;/p&gt;

\[p_\theta(z_1) = p_\theta(z_0)* |\det(\frac{\partial f_1(z_0)}{\partial z_0})|^{-1}\]

&lt;p&gt;Considering the sequence of compositional transformations \(f_i's\), one obtains:&lt;/p&gt;

\[p_\theta(z_k) = p_\theta(z_0)* \prod_{i=1..k}|\det(\frac{\partial f_i}{\partial z_{i-1}})|^{-1}\]

&lt;p&gt;The term on the right i.e. determinant of the Jacobian accounts for the change
of \(\delta\) volume induced by the transformation. It serves to normalize the
transformed distribution locally, after each flow through a transformation,
hence the name, Normalizing Flows.&lt;/p&gt;

&lt;p&gt;Some Questions at this stage:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The sequence of flows need to be invertible and differentiable. What sort of
constraints does it introduce in terms of the output distributions that can
be reached? Are there families of distributions that we can’t reach starting
from a Gaussian?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sampling&quot;&gt;Sampling&lt;/h2&gt;

&lt;p&gt;In this case, the bijective functions and the initial distribution are given. Sampling points from the output distribution requires calculating the forward pass, i.e. an efficient calculation of the functions \(f_i's\).&lt;/p&gt;

&lt;h2 id=&quot;density-estimation-using-maximum-likelihood&quot;&gt;Density Estimation using Maximum Likelihood&lt;/h2&gt;

&lt;p&gt;In this case a dataset \(\{a_1, a_2,....,a_n\}\) is provided and the objective is to learn the probability density function \(p_\theta(A)\) to which the points belong. An initial density \(p_\theta(z_0)\) is chosen.&lt;/p&gt;

&lt;p&gt;For each \(a_i\) we have:&lt;/p&gt;

\[p_\theta(a_i) = p_\theta(z_i)* |\det(\frac{\partial f(z_i)}{\partial z_i})|^{-1}\]

&lt;p&gt;where, \(a_i = f(z_i)\)&lt;/p&gt;

\[\prod_{i=1}^n p_\theta(a_i) =\prod_{i=1}^n [p_\theta(z_i)* |\det(\frac{\partial f(z_i)}{\partial z_i})|^{-1}]\]

&lt;p&gt;We need to maximize the above over all possible flows \(f\) to find the flow \(\hat{f}\) that maximizes the probability.&lt;/p&gt;

\[\hat{f} =\text{arg max}_f \text{ }\prod_{i=1}^n [p_\theta(z_i)* |\det(\frac{\partial f(z_i)}{\partial z_i})|^{-1}]\]

&lt;p&gt;Using log likelihood maximization we arrive at:&lt;/p&gt;

\[\hat{f} =\text{arg max}_f \text{ }\sum_{i=1}^n [log(p_\theta(z_i)) - log(|\det(\frac{\partial f(z_i)}{\partial z_i})|)]\]

&lt;p&gt;The equation shown above is used during training for density estimation. However, since we only know \(a_i's\) the only way to find \(z_i's\) which are used, is to find the inverse mapping i.e. \(z_i = f^{-1}(a_i)\) .  So for density estimation and training, the calculation of both the inverse and determinant of the Jacobian are required.&lt;/p&gt;

&lt;p&gt;However, calculating the inverse and the determinant of the Jacobian of a sequence of high dimensional transformations can be very time consuming (for dimensionality \(d\) matrix, both are of complexity \(O(d^3)\)). There are various tricks that are used to reduce the complexity of these two operations, one of the popular ones being the use of triangular maps.&lt;/p&gt;

&lt;h2 id=&quot;triangular-maps&quot;&gt;Triangular maps:&lt;/h2&gt;

&lt;p&gt;Let \(T\) be a normalizing flow, \(T: z \rightarrow x\) where \(x = (x_1, x_2 .... x_d)\) and \(z = (z_1, z_2 .... z_d)\). More generally, one can decompose \(T\) into \(T_1, T_2...T_d\) such that \(x_i = T_i(z_1,z_2.....z_d)\).&lt;/p&gt;

&lt;p&gt;Now if we want to introduce an additional constraint on \(T\) i.e. for \(T\) to be a triangular map, each \(T_j\) should be a function of \((z_1,z_2.....z_j)\) i.e. the first \(j\) elements and not all the \(d\) elements.&lt;/p&gt;

&lt;p&gt;For triangular maps/matrices, both the inverse and the determinant of the jacobian is easy to compute. The jacobian for a triangular map is shown below. The determinant is simply the product of the diagonals and has a complexity of \(O(d)\) instead of \(O(d^3)\). The complexity for the calculation of the inverse is \(O(d^2)\) instead of \(O(d^3)\).&lt;/p&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/normalizing-flows/jacobian.jpg&quot; /&gt;
  &lt;figcaption&gt;Fig 2: The jacobian for a triangular map. This is taken from here.&lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;Note: For an increasing triangular map, \(\frac {\partial T_i}{\partial z_i} &amp;gt; 0\). This will be useful in Part - 2 where the different types/families of Normalizing flows will be considered.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/1908.09257.pdf&quot;&gt;Normalizing Flows: An Introduction and Review of Current Methods&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lilianweng.github.io/lil-log/2018/10/13/flow-based-deep-generative-models.html#vae--flows&quot;&gt;Flow-based Deep Generative Models&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3KUvxIOJD0k&amp;amp;ab_channel=PascalPoupart&quot;&gt;Lecture on NFs by Priyank Jaini&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Kriti Anandan</name></author><category term="Machine Learning" /><category term="normalizing-flows" /><category term="tts" /><summary type="html">Normalizing flows, popularized by (Rezende, &amp;amp; Mohamed, 2015), are techniques used in machine learning to transform simple probability distribution functions into complicated ones. One of the popular use cases is in generative modelling - an unsupervised learning method - where the goal is to model a probability distribution given samples drawn from that distribution.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/demo1.jpg" /><media:content medium="image" url="/assets/images/demo1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Interspeech 2020</title><link href="/interspeech/" rel="alternate" type="text/html" title="Interspeech 2020" /><published>2020-12-01T00:00:00+00:00</published><updated>2020-12-01T00:00:00+00:00</updated><id>/interspeech</id><content type="html" xml:base="/interspeech/">&lt;p&gt;We recently attended the all remote &lt;a href=&quot;http://www.interspeech2020.org/&quot;&gt;Interspeech
2020&lt;/a&gt;. Each of us made notes on what they did
overall. But instead of posting those or going with a
what-we-think-about-the-conference style post, we thought to just ask the team
what interested them the most in a few sentences. Here are the individual
responses:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://lepisma.xyz/&quot;&gt;Abhinav&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I really liked the &lt;a href=&quot;https://zerospeech.com/&quot;&gt;ZeroSpeech&lt;/a&gt; challenge. As usual,
they had few really interesting unsupervised problems and solutions. I find
their tracks really ambitious as evident by this statement on their website
“… infants learn to speak their native language, spontaneously, from raw
sensory input, without supervision from text or linguists. It should be
possible to do the same in machines”.&lt;/p&gt;

  &lt;p&gt;Next year, 2021, the &lt;a href=&quot;https://zerospeech.com/2021/news.html&quot;&gt;target is Spoken Language
Modeling&lt;/a&gt;. Looking forward to that too.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://ltbringer.github.io/blog/&quot;&gt;Amresh&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Meta Learning Tutorial on day 1 was a detailed session on the topic. The
promise of performing well on a set of task(s) with less amount of data had my
attention. The authors take care of introduction, utility and comparison of
this approach and its impact on tasks like speaker verification, keyword
spotting, Emotion Recognition and my special interest conversational AI.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/janaab11/&quot;&gt;Manas&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A new thing here was Computational Paralinguistics, that covers the
non-content parts of speech. Given my interest in the stylistic parts of
speech, this was particularly interesting. Papers presented many ideas
relevant to building a better voicebot, like - uncertainty aware methods for
multiple labels, Autism Quotient as a perception feature, and predicting CSAT
scores from sentiment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pskrunner14&quot;&gt;Prabhsimran&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Interspeech had some great sessions, from discussions on more fundamental
concepts related to Speech Processing in the Brain, Phonetics and Phonology to
novel ideas on Training Strategies for ASR like Semantic Word Masking,
Efficient Vocoder implementations for faster Neural Waveform Synthesis and
Automatic Prosody Analysis for Non-Semantic Speech Representations. It helped
me connect alot of dots and exposed me to some great ideas we should be
exploring in our work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/in/kaustavtamuly/&quot;&gt;Kaustav&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I really liked attending the Speech Emotion Recognition tracks. The tracks
covered a multitude of topics including self-supervised learning methods,
non-semantic representations, etc. It was overall, a very balanced track with
a lot of interaction among the attendees and the presenters. The speech signal
representation track was pretty fun too with some really interesting papers on
voice casting, universal non-semantic representations.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Abhinav Tushar</name></author><category term="Machine Learning" /><category term="featured" /><category term="conference" /><summary type="html">We recently attended the all remote Interspeech 2020. Each of us made notes on what they did overall. But instead of posting those or going with a what-we-think-about-the-conference style post, we thought to just ask the team what interested them the most in a few sentences. Here are the individual responses:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/demo1.jpg" /><media:content medium="image" url="/assets/images/demo1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Reading Sessions</title><link href="/reading-sessions/" rel="alternate" type="text/html" title="Reading Sessions" /><published>2020-11-30T00:00:00+00:00</published><updated>2020-11-30T00:00:00+00:00</updated><id>/reading-sessions</id><content type="html" xml:base="/reading-sessions/">&lt;p&gt;Studying researches and building on top of them is an important part of what a
team of ML Engineers do on a regular basis. Usually, teams do this by organizing
periodic, often weekly, paper reading sessions. Here is a snippet from an
internal work memo by &lt;a href=&quot;https://github.com/janaab11/&quot;&gt;Manas&lt;/a&gt; explaining how we
look at these sessions:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lets start with the basic motivation behind these sessions - we want
to read more papers. But beyond this individual goal, there is also
the simpler driving force of enthusiasm - we read something we like,
and we want to share it. It is the same instinct that drives us to
talk about books we read, movies we watch, and podcasts we listen to.
…&lt;/p&gt;

  &lt;p&gt;There are also secondary benefits, like knowledge transfer - both
speaker and audience will understand the topic better after a good
presentation - and discovering shared interests within a larger group,
etc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But it’s not that easy to bring this in practice. Specially in a startup, where
processes and structures are constantly in flux. As the team size keeps growing,
different kinds of diversities start interfering. Diversities in interests,
reading styles, and even bandwidth.&lt;/p&gt;

&lt;p&gt;This post covers how we organize reading sessions in the ML team at
&lt;a href=&quot;https://vernacular.ai/&quot;&gt;Vernacular.ai&lt;/a&gt;. It might be helpful if you are trying
to do the same in your group.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The very first thing that we did was to start asking people for research
papers that they like, weekly. After voting on one, the proposer of the
paper presented it on a predetermined day. This lost steam away after a
while because of various reasons. One of them being bandwidth crunch for
everyone that time. We were just 3 people.&lt;/p&gt;

&lt;p&gt;We revived paper reading after a while. This time everyone picked and
presented a paper of their own liking. This wasn’t supposed to scale up
with team size, but we went with this for a decent while. While we were
free to choose and read whatever we wanted, lack of continuity in
readings, practical disconnects and difference in interests started to
reduce the overall engagement.&lt;/p&gt;

&lt;p&gt;After lockdown, the engagement level dropped further. On video calls,
you have to upgrade the quality of meetings if you want to maintain the
same level of participation. The missing modalities hurt significantly.
We spent inordinate amount of time trying to get to one single view on
how to go about these sessions. We tried experimenting with various
aspects like paper selection, accountability, presentation
accessibility, etc.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Rather than going in those experiments in chronological order, it makes
sense to think about the problems from two angles based on what we know
now. You can say that the &lt;em&gt;sessions&lt;/em&gt; are having certain issues, or
alternatively you can say that the &lt;em&gt;people&lt;/em&gt; are having issues with the
sessions. While both feed on each other and are cyclic, it helps to look
at them separately.&lt;/p&gt;

&lt;h2 id=&quot;sessions&quot;&gt;Sessions&lt;/h2&gt;

&lt;p&gt;We can break down sessions temporarily in the following three acts.&lt;/p&gt;

&lt;h3 id=&quot;1-pre-session&quot;&gt;1. Pre Session&lt;/h3&gt;

&lt;p&gt;Here it’s known that a certain session is supposed to happen. You can
do the following in preparation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Set clear &lt;em&gt;expectations&lt;/em&gt;. What is supposed to be covered? How it’s
supposed to be covered? Who should come? What will be the outcome?
etc.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Excite&lt;/em&gt; the potential audience. If the audience is not really aware
of the topic, some amount of pre-work needs to be done to pull them
in.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-session&quot;&gt;2. Session&lt;/h3&gt;

&lt;p&gt;During the session, you want to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Make the presentation &lt;em&gt;stimulating and engaging&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Keep the presentation &lt;em&gt;accessible&lt;/em&gt; while not being superficial.&lt;/li&gt;
  &lt;li&gt;Develop &lt;em&gt;practical connections&lt;/em&gt; between the audience and content.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-post-session&quot;&gt;3. Post Session&lt;/h3&gt;

&lt;p&gt;Since you want the next sessions to be successful too, you would like
to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Make sure people are going away with a healthy amount of &lt;em&gt;thought
food&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Nudge towards the &lt;em&gt;utilitarian aspects&lt;/em&gt; of concepts discussed so that
audience have a few threads of experimentation to follow in their day
to day work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;people&quot;&gt;People&lt;/h2&gt;

&lt;p&gt;For people, we can think along the following lines&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Resourcefulness.&lt;/li&gt;
  &lt;li&gt;Motivation.&lt;/li&gt;
  &lt;li&gt;Interests, their depths, and varieties.&lt;/li&gt;
  &lt;li&gt;Style and method of working with new knowledge.&lt;/li&gt;
  &lt;li&gt;Level of comfort with group sessions. Both for presentation and
discussion.&lt;/li&gt;
  &lt;li&gt;Bandwidth. Specially considering industrial settings like ours.&lt;/li&gt;
  &lt;li&gt;Structural assistance and pushes.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Acting on all these factors to deliver a single style of session that
works for everyone is impossible. Not all factors might be important for
a team at a given moment of time, but even a reasonably small set is
sufficiently diverse. The key idea is accept a pluralistic view on the
issue. There is no &lt;em&gt;single&lt;/em&gt; fundamentally correct way of doing these
sessions, and it’s better to pick a digestible subset and solve for that.&lt;/p&gt;

&lt;p&gt;Going ahead with this realization, we started doing &lt;em&gt;seminars&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;seminars&quot;&gt;Seminars&lt;/h2&gt;

&lt;p&gt;Reading Seminars are very similar to seminar courses in Universities.
From another internal memo:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;These [Seminars] exist to complement the world of &lt;em&gt;paper readings&lt;/em&gt;.
While &lt;em&gt;Paper Reading&lt;/em&gt; sessions are about reading more papers and
sharing what we like, &lt;em&gt;Reading Seminars&lt;/em&gt; are about learning something
specific. These are much more structured and pointed towards a goal.
The idea is to have deeper discussions, over longer periods of time,
about topics that might interest you. Either directly or indirectly,
this will lead to a better output (from the speaker) and experience
(for the audience) in the &lt;em&gt;Paper Reading&lt;/em&gt; sessions that follow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Seminars cover many of the issues nicely and they clearly don’t touch
a few others. For example you can’t just bring in any new paper and
discuss that in a session without setting up a seminar for that field.
And that’s okay. There are other ways of handling that case.&lt;/p&gt;

&lt;p&gt;At the moment, we have the following parallel seminars running:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Multi-Style TTS&lt;/li&gt;
  &lt;li&gt;End-to-End ASR&lt;/li&gt;
  &lt;li&gt;Speech Representation Learning&lt;/li&gt;
  &lt;li&gt;Dialog State Trackers&lt;/li&gt;
  &lt;li&gt;Computational Paralinguistics&lt;/li&gt;
  &lt;li&gt;Learning Theory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these has a list of papers or topics to be discussed over a period of
1-2 months. While not perfect, these are turning out to be decent reading
roadmaps for these topics. Something we would like to open out after a couple of
months, similar to the old style
&lt;a href=&quot;https://backyard.vernacular.ai/paper-reading/&quot;&gt;paper reading&lt;/a&gt; sessions.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Many are derived from an internal note by
&lt;a href=&quot;https://github.com/janaab11/&quot;&gt;Manas&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Abhinav Tushar</name></author><category term="Machine Learning" /><category term="work" /><summary type="html">Studying researches and building on top of them is an important part of what a team of ML Engineers do on a regular basis. Usually, teams do this by organizing periodic, often weekly, paper reading sessions. Here is a snippet from an internal work memo by Manas explaining how we look at these sessions:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/demo1.jpg" /><media:content medium="image" url="/assets/images/demo1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Bad Audio Detection</title><link href="/bad-audio-detection/" rel="alternate" type="text/html" title="Bad Audio Detection" /><published>2020-07-29T00:00:00+00:00</published><updated>2020-07-29T00:00:00+00:00</updated><id>/bad-audio-detection</id><content type="html" xml:base="/bad-audio-detection/">&lt;p&gt;This blog will be a short one, where we’ll talk about our approach on filtering
out inscrutable audios from &lt;a href=&quot;https://vernacular.ai/vasr&quot;&gt;&lt;strong&gt;VASR&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are situations in Call Center Automation (CCA) pipeline where user
utterances are bad. &lt;strong&gt;Bad&lt;/strong&gt; here is defined by things like noise, static,
silences or background murmur etc. rendering the downstream SLU systems
helpless. We started with a proposal and prepare a dataset for making an ML
system learn to reject these audios.&lt;/p&gt;

&lt;h2 id=&quot;benefits&quot;&gt;Benefits&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;No more misfires from SLU side which ultimately leads to a better user
experience.&lt;/li&gt;
  &lt;li&gt;Save compute and time by skipping bad audios.&lt;/li&gt;
  &lt;li&gt;The whole system can be used for all our audio based tasks to predict and
filter out the poor ones, hence avoiding sample noise for these tasks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dataset&quot;&gt;Dataset&lt;/h2&gt;

&lt;p&gt;We prepared a dataset of intent tagged conversations with specially marked
intents which tell us that these utterances are bad and them going further in
SLU will result in errors. Also we have a sampling of non-bad utterances
(tagged with regular intents) to make this a classification problem.&lt;/p&gt;

&lt;p&gt;There are total 9928 samples of audios labelled as bad and 20000 samples
labeled as good.&lt;/p&gt;

&lt;p&gt;All the raw labels were not very useful, hence we clean and preprocess the data
to finally create 2 broad categories with sub-classes.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audio-bad&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audio-noisy&lt;/code&gt;: Noisy audio.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audio-silent&lt;/code&gt;: Silent audio.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audio-talking&lt;/code&gt;: Background talking.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hold-phone&lt;/code&gt;: Music from keeping on hold.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audio-good&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;exploratory-data-analysis&quot;&gt;Exploratory Data Analysis&lt;/h2&gt;

&lt;p&gt;We needed to understand the class imbalance and hence we plot a histogram
representing number of samples for each class.&lt;/p&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/bad-audio-detection/Class_Distribution.png&quot; /&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/bad-audio-detection/EDA.png&quot; /&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;We also plot the frequency vs duration histogram plot to understand the general
distribution of audio durations in the dataset.  Based on the mean duration of
5.26 seconds and the peaks in the histogram, we decided to threshold our audios
to 6.5 seconds.  Anything less than that will be padded to 6.5 seconds and
anything greater than that duration will be truncated to 6.5 seconds.&lt;/p&gt;

&lt;p&gt;Even though we have sub-classes for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audio-bad&lt;/code&gt; spanning different areas of
what “bad” could be, we decided to focus only on the &lt;strong&gt;noisy audios&lt;/strong&gt;. Silent
Audios can be treated separately, since they do not actually require something
as complex as an ML model to classify them. We can simply use the age-old
powerful signal processing methods to filter those out with some good
confidence.&lt;/p&gt;

&lt;h2 id=&quot;model&quot;&gt;Model&lt;/h2&gt;

&lt;p&gt;If we are going to reject these bad audios then we need to do so with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;High Precision&lt;/strong&gt;: We should not be rejecting good audios which are
perfectly interpretable and understandable.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Low Latency:&lt;/strong&gt; This system should have little to no latency, otherwise it
will just slow down our whole VASR flow after being deployed and integrated.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Online:&lt;/strong&gt; The model should be capable of running in an online setting where
continuous chunks of audios are fed into the system.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We used a standard audio classification pipeline to train our binary
classification task.&lt;/p&gt;

&lt;p&gt;This involves generating log-mel spectrograms and then running a Convolution
Neural Network (CNN) based feature extractor on top of this fixed size
spectrogram image.&lt;/p&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/bad-audio-detection/model_architecture.png&quot; /&gt;
  &lt;figcaption&gt;Binary Audio Classification based on Log-Mel Spectrograms&lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;While these features (spectrograms) can be generated once after processing all
the audios in the dataset, this feature generation needs to be done on the fly
to make a model that can be used in deployment i.e given raw audios as input,
it should be able to predict the class, that was easily incorporated through a
few transforms done within the model using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;torch-audio&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Even though this architecture is simple, it got us an &lt;strong&gt;accuracy of about
87%&lt;/strong&gt;. But it is not the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;accuracy&lt;/code&gt; we need to see, our choice of metric to
measure the performance is &lt;strong&gt;precision&lt;/strong&gt; as explained earlier. We are still in
the process improving these initial baseline numbers of the model. One simple
approach for increasing the precision is to increase the threshold, trading-off
some coverage in the form of support.&lt;/p&gt;

&lt;h2 id=&quot;misclassification-analysis&quot;&gt;Misclassification Analysis&lt;/h2&gt;

&lt;p&gt;We also do a post prediction analysis on the misclassified audios, which
revealed an interesting pattern in the dataset and in the kind of audios that
the model was finding hard to make predictions on.&lt;/p&gt;

&lt;p&gt;Briefly these errors followed 3 major types which now helps to understand the
places where we can make improvements.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Type 1 (Very Short Utterance)&lt;/strong&gt; : say 0.2 seconds in audio of 6 seconds.
Due to noise in most part of such short utterance audios, our model predicts
it to be noisy and not good in some occasions. This can probably be fixed
with VAD which can trim the non speech segments in such short utterance
audios.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Type 2 (Long audios)&lt;/strong&gt; : Audio duration is longer than 6.5 seconds with the
speaker in latter half. Since we chose to threshold our features (log-mels)
at 6.5 seconds, the latter part of the audio is basically truncated and hence
such errors.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Type 3 (Ambiguous / Wrongly Labeled)&lt;/strong&gt; : There are samples in the dataset
which are not perfectly labelled. One may say these audios are debatablem,
some may find them to be bad others may think that they are ok. This type of
label noise is something which needs to be tackled.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Needless to say, there are places where we can improve these results, but
having a solid baseline model initially is important for incremental
improvements over time and after a few iterations we finally see these models
in our production systems.&lt;/p&gt;

&lt;p&gt;That’s all for now. Stay tuned to our &lt;a href=&quot;/feed.xml&quot;&gt;rss feed&lt;/a&gt; for updates and more.&lt;/p&gt;</content><author><name>Anirudh Dagar</name></author><category term="Machine Learning" /><category term="classification" /><summary type="html">This blog will be a short one, where we’ll talk about our approach on filtering out inscrutable audios from VASR.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/demo1.jpg" /><media:content medium="image" url="/assets/images/demo1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Speaker Diarization</title><link href="/speaker-diarization/" rel="alternate" type="text/html" title="Speaker Diarization" /><published>2020-07-21T00:00:00+00:00</published><updated>2020-07-21T00:00:00+00:00</updated><id>/speaker-diarization</id><content type="html" xml:base="/speaker-diarization/">&lt;blockquote&gt;
  &lt;p&gt;This blog post is based on the work done by &lt;a href=&quot;https://github.com/AnirudhDagar&quot;&gt;Anirudh
Dagar&lt;/a&gt; as an intern at Vernacular.ai&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;diarization---who-spoke-when&quot;&gt;Diarization - &lt;em&gt;Who&lt;/em&gt; spoke &lt;em&gt;when&lt;/em&gt;?&lt;/h1&gt;

&lt;p&gt;Speaker diarisation (or diarization) is the process of partitioning an input audio stream into homogeneous segments according to the speaker identity.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Speaker diarization is the process of recognizing “who spoke when.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In an audio conversation with multiple speakers (phone calls, conference calls, dialogs etc.), the Diarization API identifies the speaker at precisely the time they spoke during the conversation.&lt;/p&gt;

&lt;p&gt;Below is an example audio from calls recorded at a customer care center, where the agent is involved in a one-to-one dialog with the customer.&lt;/p&gt;

&lt;p&gt;This can be particularly hard sometimes as we’ll discuss later in the blog. Just to give an example, this audio below seems to have a lot of background talking and noise making it difficult even for a human to accurately understand speaker timestamps.&lt;/p&gt;

&lt;script&gt;
       $(document).ready(function () {
         var ws1 = WaveSurfer.create({
           container: '#waveform-1',
           backend: 'MediaElement'
         });
         ws1.load('https://vai-diarization.s3.ap-south-1.amazonaws.com/1573539785.2420125.002.wav');

         ws1.on('audioprocess', function () {
           let progressText = ws1.getCurrentTime().toFixed(2) + ' / ' + ws1.getDuration().toFixed(2)
           document.getElementById('player-progress-1').innerHTML = progressText
         });

         ws1.on('ready', function () {
           let progressText = ws1.getCurrentTime().toFixed(2) + ' / ' + ws1.getDuration().toFixed(2)
           document.getElementById('player-progress-1').innerHTML = progressText
         });

         ws1.on('finish', function () {
           let button = $('#controls-1 &gt; [data-action=&quot;play-pause&quot;]')
           button.find('i:first').toggleClass('fa-play')
           button.find('i:first').toggleClass('fa-pause')
           button.toggleClass('btn-dark')
         });

         for (let button of document.getElementById('controls-1').children) {
           button.onclick = function (e) {
             let action = button.getAttribute('data-action')
             switch (action) {
               case 'play-pause':
                 ws1.playPause()
                 $(button).find('i:first').toggleClass('fa-play')
                 $(button).find('i:first').toggleClass('fa-pause')
                 $(button).toggleClass('btn-dark')
                 break
               case 'backward':
                 ws1.skipBackward()
                 break
               case 'forward':
                 ws1.skipForward()
                 break
             }
           }
         }
       });
     &lt;/script&gt;

&lt;style&gt;
  .player-controls {
    margin: 20px 0;
  }
&lt;/style&gt;

&lt;div id=&quot;waveform-1&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;player-controls&quot; id=&quot;controls-1&quot;&gt;
  &lt;button class=&quot;btn btn-sml&quot; data-action=&quot;backward&quot;&gt;&lt;i class=&quot;fa fa-backward&quot;&gt;&lt;/i&gt;&lt;/button&gt;
  &lt;button class=&quot;btn btn-sml&quot; data-action=&quot;play-pause&quot;&gt;&lt;i class=&quot;fa fa-play&quot;&gt;&lt;/i&gt;&lt;/button&gt;
  &lt;button class=&quot;btn btn-sml&quot; data-action=&quot;forward&quot;&gt;&lt;i class=&quot;fa fa-forward&quot;&gt;&lt;/i&gt;&lt;/button&gt;
  &lt;code class=&quot;btn btn-sml disabled&quot; id=&quot;player-progress-1&quot;&gt;&lt;/code&gt;
&lt;/div&gt;

&lt;p&gt;Below we have an example of an audio along with its transcription and speech timestamp tags.&lt;/p&gt;

&lt;script&gt;
       $(document).ready(function () {
         var ws2 = WaveSurfer.create({
           container: '#waveform-2',
           backend: 'MediaElement'
         });
         ws2.load('https://vai-diarization.s3.ap-south-1.amazonaws.com/1573539792.52506.003.wav');

         ws2.on('audioprocess', function () {
           let progressText = ws2.getCurrentTime().toFixed(2) + ' / ' + ws2.getDuration().toFixed(2)
           document.getElementById('player-progress-2').innerHTML = progressText
         });

         ws2.on('ready', function () {
           let progressText = ws2.getCurrentTime().toFixed(2) + ' / ' + ws2.getDuration().toFixed(2)
           document.getElementById('player-progress-2').innerHTML = progressText
         });

         ws2.on('finish', function () {
           let button = $('#controls-2 &gt; [data-action=&quot;play-pause&quot;]')
           button.find('i:first').toggleClass('fa-play')
           button.find('i:first').toggleClass('fa-pause')
           button.toggleClass('btn-dark')
         });

         for (let button of document.getElementById('controls-2').children) {
           button.onclick = function (e) {
             let action = button.getAttribute('data-action')
             switch (action) {
               case 'play-pause':
                 ws2.playPause()
                 $(button).find('i:first').toggleClass('fa-play')
                 $(button).find('i:first').toggleClass('fa-pause')
                 $(button).toggleClass('btn-dark')
                 break
               case 'backward':
                 ws2.skipBackward()
                 break
               case 'forward':
                 ws2.skipForward()
                 break
             }
           }
         }
       });
     &lt;/script&gt;

&lt;style&gt;
  .player-controls {
    margin: 20px 0;
  }
&lt;/style&gt;

&lt;div id=&quot;waveform-2&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;player-controls&quot; id=&quot;controls-2&quot;&gt;
  &lt;button class=&quot;btn btn-sml&quot; data-action=&quot;backward&quot;&gt;&lt;i class=&quot;fa fa-backward&quot;&gt;&lt;/i&gt;&lt;/button&gt;
  &lt;button class=&quot;btn btn-sml&quot; data-action=&quot;play-pause&quot;&gt;&lt;i class=&quot;fa fa-play&quot;&gt;&lt;/i&gt;&lt;/button&gt;
  &lt;button class=&quot;btn btn-sml&quot; data-action=&quot;forward&quot;&gt;&lt;i class=&quot;fa fa-forward&quot;&gt;&lt;/i&gt;&lt;/button&gt;
  &lt;code class=&quot;btn btn-sml disabled&quot; id=&quot;player-progress-2&quot;&gt;&lt;/code&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Transcription&lt;/strong&gt;: “Barbeque nation mei naa wo book kia tha ok table book kia tha han toh abhi na uske baad ek phone aaya tha toh wo barbeque nation se hi phone aaya tha mai receive nhi kar paaya toh yehi”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diarization Tag&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AGENT: [(0, 5.376), (8.991, 12.213)], CUSTOMER: [(6.951, 7.554)]&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-diarization-is-not-&quot;&gt;What Diarization is NOT ?&lt;/h2&gt;

&lt;p&gt;There is a fine line between speaker diarization and other related speech processing tasks.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Diarization != Speaker Change Detection&lt;/strong&gt; : Diarization systems spit a label, whenever a new speaker appears and if the same speaker comes again, it provides the same label. However, in speaker change detection no such labels are given, only the boundary of change is considered for prediction.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Diarization != Speaker Identification&lt;/strong&gt; : The goal is not to learn the voice prints of any known speaker. Speakers’ are not registered before running the model.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;motivation&quot;&gt;Motivation&lt;/h1&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/speaker-diarization/speaker_diarization_vernacular.png&quot; /&gt;
  &lt;figcaption&gt;Fig 1.: ASR using Diarization tags to understand and segregate transcription.&lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;With the rise of speech recognition systems both in terms of scale and accuracy, the ability to process audio of multiple speakers is crucial and has become quintessential to understand speech today.&lt;/p&gt;

&lt;p&gt;As illustrated in &lt;strong&gt;Fig 1.&lt;/strong&gt; above, information gained through diarization helps in enriching and improving Spoken Language Understanding (SLU) based on the Automatic Speech Recognition (ASR) transcription. It can enhance the readability of the transcription by structuring the audio stream into speaker turns and, when used together with speaker recognition systems, by providing the speaker’s true identity. This can be valuable for downstream applications such as analytics for call-center transcription and meeting transcription etc.&lt;/p&gt;

&lt;p&gt;Other than this, we at &lt;a href=&quot;https://vernacular.ai/&quot;&gt;Vernacular.ai&lt;/a&gt; work on &lt;strong&gt;&lt;em&gt;Call Center Automation (CCA)&lt;/em&gt;&lt;/strong&gt; among many other speech domains, and, at the very core this is powered by our products &lt;a href=&quot;https://vernacular.ai/viva&quot;&gt;VIVA&lt;/a&gt; and &lt;a href=&quot;https://vernacular.ai/vasr&quot;&gt;VASR&lt;/a&gt;. Information gained through diarization can be used to strengthen the VASR engine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let me explain the goal of every customer care call support service, if you are not already aware of. The ultimate aim is to provide best in class service to the customers of the respective company. Quantitatively, measure of the service quality is based on the assessment of the &lt;em&gt;AGENT’s&lt;/em&gt; (Call representative at customer care center) ability to disseminate relevant information to the &lt;em&gt;CUSTOMER&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;During the quality check phase, an &lt;em&gt;AGENT’s&lt;/em&gt; performance is scored on mutiple parameters, such as (but not limited to):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Whether the agent was patient enough listening to the customer or was rushing on the call&lt;/li&gt;
  &lt;li&gt;Whether she/he was rude to the lead at any time or not&lt;/li&gt;
  &lt;li&gt;Whether she/he used the proper language to communicate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For such occasions, identifying different speakers in a call (&lt;em&gt;“AGENT”&lt;/em&gt; or &lt;em&gt;“CUSTOMER”&lt;/em&gt;) and finally connecting different sentences under the same speaker is a critical task for the assessment quality.&lt;/p&gt;

&lt;p&gt;Speaker Diarization is the solution for those problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other applications involve&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Information retrieval from broadcast news.&lt;/li&gt;
  &lt;li&gt;Generating notes/minutes of meetings.&lt;/li&gt;
  &lt;li&gt;Turn-taking analysis of telephone conversations.&lt;/li&gt;
  &lt;li&gt;Call center Data analysis&lt;/li&gt;
  &lt;li&gt;Court houses &amp;amp; Parliaments.&lt;/li&gt;
  &lt;li&gt;Broadcast News(TV and Radio)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dihard&quot;&gt;DIHARD?&lt;/h2&gt;

&lt;p&gt;This is not &lt;u&gt;2x2=4&lt;/u&gt;. This is &lt;strong&gt;Diarization&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;IT IS HARD&lt;/em&gt;&lt;/strong&gt;. One can say that it is one of the toughest ML problems intrinsically high on complexity, even for a human-being, in certain conditions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But Why???&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Real world audios are not always &lt;em&gt;sunshine and rainbows&lt;/em&gt;. They come with infinite complexities.
To name a few:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In most of the conversations, people will interrupt each other, overtalk etc., and, cutting the audio between sentences won’t be a trivial task due to this highly interactive nature.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Speakers are discovered dynamically. Although as you’ll see later, in our case we only have 2 speakers, a fixed number.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Sometimes the &lt;strong&gt;audio is noisy&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;People &lt;strong&gt;talking&lt;/strong&gt; in the &lt;strong&gt;background&lt;/strong&gt;.&lt;/li&gt;
      &lt;li&gt;The microphone picking up speakers’ &lt;strong&gt;environment noises&lt;/strong&gt; (roadside noises, industrial machinery noise, music in the background etc.).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;For telephony based audios, &lt;strong&gt;connection may be weak&lt;/strong&gt; at times, leading to:
    &lt;ul&gt;
      &lt;li&gt;Audio being &lt;strong&gt;dropped/corrupted&lt;/strong&gt; in some parts.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Static&lt;/strong&gt;  or just some &lt;strong&gt;buzzing&lt;/strong&gt; noise creeping in the conversation and finding it’s way into the audio recording.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Believe me&lt;/strong&gt;, this is not the end of many problems for diarization!&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Maybe in a conference call with multiple speakers, even if the audio is clear, the &lt;strong&gt;difference can be very subtle&lt;/strong&gt; between the speakers, and it is not always possible to identify/label the correct speaker for a particular timestamp/duration.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Ok, so that’s it?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If I have not made my point clear about the complexity of the problem, yet, then I’ll express my message through this legendary meme.&lt;/p&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/speaker-diarization/diarization_hard.jpg&quot; /&gt;
  &lt;figcaption&gt;Fig 2.: Diarization is hard!&lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;More Problems?&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;All the problems stated above are considering that preprocessing steps like VAD/SAD worked perfectly, which you may have guessed, are obviously not 100% accurate.&lt;/p&gt;

    &lt;p&gt;What is this &lt;strong&gt;“preprocessing step”&lt;/strong&gt;?&lt;/p&gt;

    &lt;p&gt;Voice Activity Detection (VAD) or Speech Activity Detection (SAD) is a widely used audio preprocessing technique, before running a typical diariaztion api based on the clustering of speaker embeddings. The objective of VAD/SAD is to get rid of all non-speech regions.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;approaching-the-problem&quot;&gt;Approaching the problem&lt;/h1&gt;

&lt;p&gt;Keeping in mind the complexity and hardness of the problem, multiple approaches have been devised over the years to tackle diarization. Some earlier approaches were based on Hidden Markov Models (HMMs)/ Gaussian Mixture Models (GMMs). More recently, Neural Embedding (x-vectors/d-vectors) + Clustering and End2End Neural methods have demonstrated their power.&lt;/p&gt;

&lt;p&gt;As stated in &lt;a href=&quot;https://arxiv.org/pdf/1909.06247.pdf&quot;&gt;this&lt;/a&gt; paper by Fujita et al., a x-vector/d-vector clustering-based system is commonly used for speaker diarization and most of our experiments are based around this approach.&lt;/p&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/speaker-diarization/diarization_clustering.jpg&quot; /&gt;
  &lt;figcaption&gt;Fig 3.: The image shows the cluster generated based on the speech pattern and precise time the speaker participated in the conversation.&lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;The aim of speaker clustering is to put together all the segments that belong to the same acoustic source in a recording. These don’t utilize any prior information of the speaker ID or the number of speakers in the recording. We’ll be covering a typical embedding-clustering based approach in detail in the latter sections of the blog.&lt;/p&gt;

&lt;p&gt;However, speaker diarization systems which combine the two tasks in a unified framework are gaining popularity in recent times. &lt;strong&gt;Fig 4&lt;/strong&gt; visually summarizes the End2End idea. Due to the increased amounts of data being avaialable, joint End2End modeling methods are slowly taking over older approaches across ML domains, alleviating the complex preparation processes involved earlier.&lt;/p&gt;

&lt;p&gt;One example is &lt;strong&gt;&lt;em&gt;&lt;a href=&quot;https://arxiv.org/abs/1909.06247&quot;&gt;EEND: End2End Neural Diarization&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt; by Fujita et al. proposed recently showing some promise in regards to solving these complex steps jointly.&lt;/p&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/speaker-diarization/EEND.jpg&quot; /&gt;
  &lt;figcaption&gt;Fig 4.: An End to End approach diarization system.&lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;defining-our-problem&quot;&gt;Defining Our Problem&lt;/h2&gt;

&lt;p&gt;We need to answer the question &lt;em&gt;“What should be a robust diarization system?”&lt;/em&gt; before moving forward. We decided to try out multiple approaches and model experiments explained in the sections below.&lt;/p&gt;

&lt;p&gt;Our model should be powerful enough to capture global speaker characteristics in addition to local speech activity dynamics.
A systems, that is able to accurately handle &lt;strong&gt;highly interactive&lt;/strong&gt; and &lt;strong&gt;overlapping speech&lt;/strong&gt; specifically in the telephony call audios conversational domain, while being resilient to variation in mobile microphones, recording environment, reverberation, ambient noise, speaker demographics. Since we have a more focused problem, for evaluating customer care center call audios, the number of speakers for our use case is fixed at two i.e “AGENT” and “CUSTOMER” for each call, we need to tune our model for the same.&lt;/p&gt;

&lt;h2 id=&quot;method&quot;&gt;Method&lt;/h2&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/speaker-diarization/diarization_pipeline.png&quot; /&gt;
  &lt;figcaption&gt;Fig 5.: A typical diarization pipeline.&lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;VAD&lt;/strong&gt; — We employ &lt;a href=&quot;https://github.com/wiseman/py-webrtcvad&quot;&gt;WebRTC VAD&lt;/a&gt; to remove noise and non speech regions during our experiments. Raw audios are split into frames with specific duration (30 ms in our case). For each input frame, WebRTC generates output 1 or 0, where 1 denotes speech and 0 denotes nonspeech. An optional setting of WebRTC is the aggressive mode, an integer between 0 and 3. 0 is the least aggressive about filtering out nonspeech while 3 is the most aggressive. These VAD/SAD models have their own respective struggles with and set of problems.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Embedder&lt;/strong&gt; — &lt;a href=&quot;https://github.com/resemble-ai/Resemblyzer&quot;&gt;Resemblyzer&lt;/a&gt; allows you to derive a high-level representation of a voice through a deep learning model (referred to as the voice encoder). Given an audio file of speech, it creates a summary vector of size 256 (embedding) that summarizes the characteristics of the voice spoken.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Clustering&lt;/strong&gt; — We cluster the segment wise embedding using a simple &lt;strong&gt;K-Means&lt;/strong&gt; to produce diarization results and determine the number of speakers with each speakers time stamps.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Resegmentation&lt;/strong&gt; - Finally, an optional supervised classification step may be applied to actually identity every speaker cluster in a supervised way.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;evaluation-metrics&quot;&gt;Evaluation Metrics&lt;/h2&gt;

&lt;p&gt;To evaluate the performance or to estimate the influence of errors on the
complete pipeline, we use the standard metrics implemented in
&lt;a href=&quot;https://pyannote.github.io/pyannote-metrics/reference.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyannote-metrics&lt;/code&gt;&lt;/a&gt;.
We also need to account for the fact that these time-stamps are manually
annotated by data-annotators and hence cannot be precise at the audio sample
level. It is a common practice in speaker diarization research to remove a
fixed collar around each speaker turn boundary from being evaluated using our
metric of choice. A 0.4sec collar would exclude 200ms before and after the
boundary.&lt;/p&gt;

&lt;p&gt;Diarization error rate (DER) is the &lt;strong&gt;de facto&lt;/strong&gt; standard metric for evaluating and comparing speaker diarization systems. It is measured as the fraction of time that is not attributed correctly to a speaker or non-speech.&lt;/p&gt;

&lt;p&gt;The DER is composed of the following three errors:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;False Alarm&lt;/strong&gt;: It is the percentage of scored time that a hypothesized speaker is labelled as a non-speech in the reference. The false alarm error occurs mainly due to the the speech/non-speech detection error (i.e., the speech/non-speech detection considers a non-speech segment as a speech segment). Hence, false alarm error is not related to segmentation and clustering errors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Missed Detection&lt;/strong&gt;: It is the percentage of scored time that a hypothesized non-speech segment corresponds to a reference speaker segment. The missed speech occurs mainly due to the the speech/non-speech detection error (i.e., the speech segment is considered as a non-speech segment). Hence, missed speech is not related to segmentation and clustering errors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Confusion&lt;/strong&gt;: It is the percentage of scored time that a speaker ID is assigned to the wrong speaker. Confusion error is mainly a diarization system error (i.e., it is not related to speech/non-speech detection.) It also does not take into account the overlap speeches not detected.&lt;/p&gt;

\[\text{DER} = \frac{\text{false alarm} + \text{missed detection} + \text{confusion}}{\text{total}}\]

&lt;h2 id=&quot;resegmentation&quot;&gt;Resegmentation&lt;/h2&gt;

&lt;p&gt;As stated earlier, speaker diarization consists of automatically partitioning an input audio stream into homogeneous segments (segmentation) and assigning these segments to the same speaker (speaker clustering). Read more about segmentation &lt;a href=&quot;https://pyannote.github.io/pyannote-metrics/reference.html#segmentation&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Is it possible to &lt;strong&gt;resegment&lt;/strong&gt; these assignments, &lt;strong&gt;post clustering&lt;/strong&gt;, to achieve an improved lower DER?&lt;/p&gt;

&lt;p&gt;This is exactly the job of a &lt;em&gt;resegmentation&lt;/em&gt; module. Simply put, we had a condition to be improved, a difficulty to be eliminated, and a troubling question that existed.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If yes, in what scenarios this optional (Resegmentation) module helps?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before going ahead with resegmentation, we needed meaningful understanding and deliberate investigation of the predictions to answer the above question.&lt;/p&gt;

&lt;p&gt;We brainstormed on this particular section involving post-processing of predictions in the diarization pipeline. After analysis and comparisons of predicted annotations made to the true annotations, our system, though good (with DER=0.05), was possibly facing an issue.&lt;/p&gt;

&lt;p&gt;We were hit by something called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;oversegmentation&lt;/code&gt;, which can be seen in figure 6 below.&lt;/p&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/speaker-diarization/resegmentation.jpg&quot; /&gt;
  &lt;figcaption&gt;Fig 6.: Oversegmentation. Need for resegmentation?&lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;To fix this problem and in the process making our system more robust, we tried multiple experiments tweaking the resegmentation module.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Standard Smoothing&lt;/strong&gt;: This is a simple annotation post processing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smoothing function&lt;/code&gt; to solve the abrupt annotated segments (oversegmented regions) by merging these items smaller than or equal to the threshold (duration less than 0.2 seconds) with neighbouring annotation. We instantly got a 1% boost in DER (0.04) after smoothing.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Our initial hunch about oversegmentation based on the analysis was now supported by results from this simple exercise. This made us think about a few more questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Can we do even better?&lt;/li&gt;
  &lt;li&gt;Can we use the labels and supervise the resegmentation module learning this smoothing function at the very least?&lt;/li&gt;
  &lt;li&gt;Are there some other errors in the predictions which we may have overlooked, but probably a learned resegmentation model captures?&lt;/li&gt;
  &lt;li&gt;Can we leverage clustering confidences to improve the resegmentation module?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aiming to answer the above questions, we came up with a &lt;em&gt;Supervised Resegmentation Sequence2Sequence model&lt;/em&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Supervised Seq2Seq Resegmentation&lt;/strong&gt;: The goal of the model as shown below is to learn a mapping from the initial predictions to the ground truth sequence based on supervised training.&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
 &lt;span class=&quot;n&quot;&gt;Resegmentation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Goal&lt;/span&gt;

             &lt;span class=&quot;n&quot;&gt;PREDICTIONS&lt;/span&gt;                         &lt;span class=&quot;n&quot;&gt;GROUND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUTH&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;....]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;....]&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Speaker&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Speaker&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; 

       &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;represents&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fixed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;our&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;annotations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;To achieve such a mapping we worked on a simple Seq2Seq LSTM based model. We also enriched this model with information of cluster confidences after tweaking our Embedding+Clustering pipeline to do a soft clustering, i.e. return cluster scores based on the distance of each point in the cluster from the centroid along with the clustered predictions.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Overall all the above steps regarding a supervised resegmentation model were completely experimental and based on a few ideas. We are yet to achieve convincing results based on this approach but I thought it would be nice to mention this cool experiment :). Providing more resegmentation sequences for training could definitely and we also try to tackle diarization with limited data. See &lt;a href=&quot;#simulated-data-generation&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;uis-rnn&quot;&gt;UIS-RNN&lt;/h2&gt;

&lt;p&gt;To explore more supervised methods, we also experimented with &lt;a href=&quot;https://arxiv.org/abs/1810.04719&quot;&gt;Fully Supervised Speaker Diarization&lt;/a&gt; or the UIS-RNN model, the current state of the art neural system for Speaker Diarization. Converting data to UIS Style format involves a set of preprocessing steps similar to what we had to for our supervised resegmentation model. More on the official &lt;a href=&quot;https://github.com/google/uis-rnn&quot;&gt;UIS-RNN Repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But a caveat with UIS-RNN is that it requires huge amounts of data to form a convincing hypothesis after training. On realizing the limited amount of tagged data we had, we worked on simulating datasets for Speaker Diarization which in itself comes with some challenges.&lt;/p&gt;

&lt;h2 id=&quot;simulated-data-generation&quot;&gt;Simulated Data Generation&lt;/h2&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/speaker-diarization/sim_dia_data_generator_flow.jpg&quot; /&gt;
  &lt;figcaption&gt;Fig 7.: Diarization Data Simulation&lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;We started with a large number of dual channel audio calls as a requirement for generating this Speaker Diarization Dataset.&lt;/p&gt;

&lt;p&gt;These dual channel audios were then split and saved into mono channel audio files. The key idea is that each mono channel contains one speaker and if we are able to combine these mono channeled audios compunded with known timestamps of speakers, we can then possibly recreate the audios which are potentially useful for Supervised Speaker Diarization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps as shown in Fig 7:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Split dual channel audio calls&lt;/strong&gt; into mono channel audios.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Running Webrtc VAD on the mono channels&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Aggressive&lt;/strong&gt; : Speech Regions.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Mild&lt;/strong&gt; : Invert to get Gap Regions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Compute statistics in real audios&lt;/strong&gt;: This step is required for us to understand the dynamics of overlaps and silences in a call on avergae. We compute the following ratios:
    &lt;ul&gt;
      &lt;li&gt;
\[\text{Silence Ratio} = \frac{\text{Duration of Silences}}{\text{Total Duration}}\]
      &lt;/li&gt;
      &lt;li&gt;
\[\text{Overlap Ratio} = \frac{\text{Duration of Overlapping Utterances}}{\text{Total Duration}}\]
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Combination of Speech from A and B with timestamps.&lt;/strong&gt; At the same time we needed to add &lt;strong&gt;real Gaps/Silence fills&lt;/strong&gt; and &lt;strong&gt;Overlaps (interrupts and overtalking)&lt;/strong&gt; to mimic real world call audios which are highly interactive.
 To control the amount of overlap in data-generation, we used 2 parameters mainly.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scale_overlap&lt;/code&gt; : This allowed us to control the maximum possible duration of overlap and was set based on the stats gathered in step 3.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bias_overlap&lt;/code&gt; : This allowed us to control the percentage or probability if there is an overlapping segment. Eg: setting bias_overlap to 0.75 will give 33% chance each time to add overlap.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dump tagged speaker timestamps and simulated audios.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s all for now, and we’ll end this blog here. Stay tuned to our &lt;a href=&quot;https://vernacular-ai.github.io/ml/rss.xml&quot;&gt;rss feed&lt;/a&gt; for updates.&lt;/p&gt;

&lt;p&gt;Until next time, Signing Off!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://leap.ee.iisc.ac.in/sriram/publications/papers/Deep_Self_Supervised_Hierarchical_Clustering_for_Speaker_Diarization.pdf&quot;&gt;Deep Self-Supervised Hierarchical Clustering for Speaker Diarization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ai.googleblog.com/2019/08/joint-speech-recognition-and-speaker.html&quot;&gt;Joint Speech Recognition and Speaker Diarization via Sequence Transduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/wiseman/py-webrtcvad&quot;&gt;WebRTC VAD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/2002.12761.pdf&quot;&gt;DIHARD II is Still Hard: Experimental Results and Discussions
from the DKU-LENOVO Team&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pyannote/pyannote-audio&quot;&gt;PyAnnote Audio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/resemble-ai/Resemblyzer&quot;&gt;Resemblyzer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/wq2012/awesome-diarization&quot;&gt;Awesome Diarization&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=kEcUcfLmIS0&quot;&gt;Robust Speaker Diarization for Meetings&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/1710.10467.pdf&quot;&gt;Generalized End-To-End Loss For Speaker Verification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/1810.04719&quot;&gt;Fully Supervised Speaker Diarization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Anirudh Dagar</name></author><category term="Machine Learning" /><category term="diarization" /><summary type="html">This blog post is based on the work done by Anirudh Dagar as an intern at Vernacular.ai</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/demo1.jpg" /><media:content medium="image" url="/assets/images/demo1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Building Fast and Efficient Microservices with gRPC</title><link href="/fast-microservices-with-grpc/" rel="alternate" type="text/html" title="Building Fast and Efficient Microservices with gRPC" /><published>2020-02-05T00:00:00+00:00</published><updated>2020-02-05T00:00:00+00:00</updated><id>/fast-microservices-with-grpc</id><content type="html" xml:base="/fast-microservices-with-grpc/">&lt;p&gt;Vernacular.ai processes millions of speech recognition requests every day, and to handle such a load we have focused on building a highly scalable technical stack.&lt;/p&gt;

&lt;p&gt;Firstly, we realized the drawbacks of using HTTP/1.1 keeping in mind one of our requirements to do end to end streaming recognition to reduce the overall latency of the system. So, we decided to migrate all our core services from REST APIs (HTTP/1.1 + JSON) to gRPC (HTTP/2.0 + Protobuf).&lt;/p&gt;

&lt;p&gt;In this article, I will take you through the benefits and challenges of adopting gRPC when compared to a REST-based communication style.&lt;/p&gt;

&lt;h2 id=&quot;what-is-microservices-architecture&quot;&gt;What is Microservices Architecture?&lt;/h2&gt;

&lt;blockquote&gt;

  &lt;p&gt;Defines an architecture that structures the application as a set of loosely coupled, collaborating services.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Services communicate using either synchronous protocols such as HTTP/REST, gRPC or asynchronous protocols such as AMQP. Services can be developed and deployed independently of one another.&lt;/p&gt;
&lt;blockquote&gt;

&lt;/blockquote&gt;

&lt;h2 id=&quot;what-are-the-challenges-of-adopting-microservices-architecture&quot;&gt;What are the challenges of adopting Microservices Architecture?&lt;/h2&gt;

&lt;p&gt;While there are many strong benefits of moving to a microservices architecture — there are no silver bullets!&lt;/p&gt;

&lt;p&gt;This means there are tradeoffs to make!&lt;/p&gt;

&lt;p&gt;Microservices gives us a higher level of complexity, and there are several inherent challenges with microservices you need to take into account when changing from a monolithic architecture. Like,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Inter-service network communication&lt;/li&gt;
  &lt;li&gt;Data serialization/de-serialization&lt;/li&gt;
  &lt;li&gt;Security/Authentication&lt;/li&gt;
  &lt;li&gt;Language Interoperability&lt;/li&gt;
  &lt;li&gt;Streaming Data&lt;/li&gt;
  &lt;li&gt;Monitoring&lt;/li&gt;
  &lt;li&gt;Debugging&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;gRPC gives us the tools and capabilities to combat these issues without having to roll your custom frameworks.&lt;/p&gt;

&lt;h2 id=&quot;what-is-grpc&quot;&gt;What is gRPC?&lt;/h2&gt;

&lt;blockquote&gt;

  &lt;p&gt;gRPC is a modern open-source high-performance RPC framework that can run in any environment. It can efficiently connect services in and across data centres with pluggable support for load balancing, tracing, health checking and authentication. It is also applicable in the last mile of distributed computing to connect devices, mobile applications and browsers to backend services.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;h2 id=&quot;what-are-protocol-buffers&quot;&gt;What are Protocol buffers?&lt;/h2&gt;

&lt;blockquote&gt;

  &lt;p&gt;Protocol Buffers, another open-source project by Google, is a language-neutral, platform-neutral, extensible mechanism for quickly serializing structured data in a small binary packet.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;By default, gRPC used Protocol Buffers v3 for data serialisation.&lt;/p&gt;

&lt;p&gt;When working with Protocol Buffers, we write a .proto file to define the data structures that we will be using in our RPC calls. This also tells protobuf how to serialise this data when sending it over the wire.&lt;/p&gt;

&lt;p&gt;This results in small data packets being sent over the network, which keeps your RPC calls fast, as there are fewer data to transmit.&lt;/p&gt;

&lt;p&gt;It also makes your code execute faster, as it spends less time serializing and deserializing the data that is being transmitted.&lt;/p&gt;

&lt;p&gt;Here you can see, we are defining a Person data structure, with a name, an id and multiple phone numbers of different types.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;syntax = &quot;proto3&quot;;
message Person {
string name = 1;
    int32 id = 2;
    string email = 3;
    enum PhoneType {
      MOBILE = 0;
      HOME = 1;
      WORK = 2;
    }
    message PhoneNumber {
      string number = 1;
      PhoneType type = 2;
    }
    repeated PhoneNumber phone = 4;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Along with the data structures, we can also define RPC functions in the services section of our .proto file.&lt;/p&gt;

&lt;p&gt;There are several types of RPC calls available — as we can see in GetFeature, we can do the standard synchronous request/response model, but we can also more advanced types of RPC calls, such as with RouteChat, where we can send information via bi-directional streams in a completely asynchronous way.&lt;/p&gt;

&lt;p&gt;From these .proto files, we can use the gRPC tooling to generate both clients and server-side code that handles all the technical details of the RPC invocation, data serialisation, transmission and error handling.&lt;/p&gt;

&lt;p&gt;This means we can focus on the logic of our application rather than worry about these implementation details.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service RouteGuide {
  rpc GetFeature(Point) returns (Feature);
  rpc RouteChat(stream RouteNote) returns (stream RouteNote);
}
message Point {
  int32 Latitude = 1;
  int32 Longitude = 2;
}
message Feature {
 string name = 1;
 Point location = 2;
}
message RouteNote {
  Point location = 1;
  string message = 2;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;grpc-http20--protobuf-vs-rest-http11--json&quot;&gt;gRPC (HTTP/2.0 + Protobuf) vs REST (HTTP/1.1 + JSON)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;HTTP/1.x&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HTTP/0.9 was a one-line protocol to bootstrap the World Wide Web&lt;/p&gt;

&lt;p&gt;HTTP/1.0 documented the popular extensions to HTTP/0.9 in an informational standard.&lt;/p&gt;

&lt;p&gt;HTTP/1.1 introduced an official IETF standard.&lt;/p&gt;

&lt;p&gt;HTTP/1.x clients need to use multiple connections to achieve concurrency and reduce latency; HTTP/1.x does not compress request and response headers, causing unnecessary network traffic; HTTP/1.x does not allow effective resource prioritization, resulting in poor use of the underlying TCP connection; and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of HTTP/2.0&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first advantage HTTP/2 gives you over HTTP/1.x is speed.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;HTTP/2 reduces latency by enabling full request and response multiplexing, minimize protocol overhead via efficient compression of HTTP header fields, support for request prioritization, allows multiple concurrent exchanges on the same connection and server push.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/fast-microservices-with-grpc/http-2.png&quot; /&gt;
  &lt;figcaption&gt;HTTP/2 vs HTTP/1.1 &lt;/figcaption&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Multiplexing — HTTP/1.1 vs HTTP/2.0&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HTTP/2 gives us multiplexing. Therefore, multiple gRPC calls can communicate over a single TCP/IP connection without the overhead of disconnecting and reconnecting over and over again as HTTP/1.1 will do for each request. This removes a huge overhead from traditional HTTP forms of communication.&lt;/p&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/fast-microservices-with-grpc/traffic.png&quot; /&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/fast-microservices-with-grpc/highway.png&quot; /&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Bi-directional Streaming&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HTTP/2 also has bi-directional streaming built-in. This means gRPC can send asynchronous, non-blocking data up and down, such as the RPC example we saw earlier, without having to resort to much slower techniques like HTTP-long polling.&lt;/p&gt;

&lt;p&gt;A gRPC client can send data to the server and the gRPC server can send data to the client in a completely asynchronous manner.&lt;/p&gt;

&lt;p&gt;This means that doing real-time, streaming communication over a microservices architecture is exceptionally easy to implement in our applications&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Multi-language support&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the big advantages of microservices architecture is using different languages for different services. gRPC works across multiple languages and platforms. Currently, these languages/frameworks are supported,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go&lt;/li&gt;
  &lt;li&gt;Ruby&lt;/li&gt;
  &lt;li&gt;PHP&lt;/li&gt;
  &lt;li&gt;Java / Android&lt;/li&gt;
  &lt;li&gt;C++&lt;/li&gt;
  &lt;li&gt;C#&lt;/li&gt;
  &lt;li&gt;Objective-C / iOS&lt;/li&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Node.js&lt;/li&gt;
  &lt;li&gt;Dart&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best part is that gRPC is not just a library, but tooling as well. Once you have your .proto file defined, you can generate client and server stubs for all of these languages, allowing your RPC services to use a single API no matter what language they are written in!&lt;/p&gt;

&lt;p&gt;This means that you can choose the right tool for the job when building your microservices — you aren’t locked into just one language or platform.&lt;/p&gt;

&lt;p&gt;gRPC will generate clients and servers stubs that are canonically written for the language you want to use, and also take care of the serialisation and deserialisation of data in a way that your language of choice will understand!&lt;/p&gt;

&lt;p&gt;There’s no need to worry about transport protocols or how data should be sent over the wire. All this is simply handled for you, and you can focus instead on the logic of your services as you write them.&lt;/p&gt;

&lt;figure&gt;
&lt;center&gt;
  &lt;img alt=&quot;Can't See? Something went wrong!&quot; src=&quot;/assets/images/posts/fast-microservices-with-grpc/grpc-stub.png&quot; /&gt;
&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;This means that you can choose the right tool for the job when building your microservices — you aren’t locked into just one language or platform.&lt;/p&gt;

&lt;p&gt;gRPC will generate clients and servers stubs that are canonically written for the language you want to use, and also take care of the serialisation and deserialisation of data in a way that your language of choice will understand!&lt;/p&gt;

&lt;p&gt;There’s no need to worry about transport protocols or how data should be sent over the wire. All this is simply handled for you, and you can focus instead on the logic of your services as you write them.&lt;/p&gt;

&lt;h2 id=&quot;what-are-the-challenges-in-adopting-grpc&quot;&gt;What are the challenges in adopting gRPC?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Load Balancing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our microservices are containerized and deployed using &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt;, an open-source container orchestration system. Kubernetes’s default load balancing often doesn’t work out of the box with gRPC, we use &lt;a href=&quot;https://linkerd.io/2/getting-started/&quot;&gt;Linkerd&lt;/a&gt; (Service Mesh) for gRPC load balancing with sidecar container injected to existing pods.&lt;/p&gt;

&lt;p&gt;More about &lt;a href=&quot;https://kubernetes.io/blog/2018/11/07/grpc-load-balancing-on-kubernetes-without-tears/&quot;&gt;gRPC load balancing with Kubernetes&lt;/a&gt; and other &lt;a href=&quot;https://grpc.io/blog/grpc-load-balancing/&quot;&gt;gRPC load balancing options&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manual Testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since gRPC is a binary protocol, the RPC methods cannot be manually tested using GUI tools like Postman (generally used for HTTP/1.1 text-based protocol). We have used &lt;a href=&quot;https://github.com/ktr0731/evans&quot;&gt;Evans&lt;/a&gt; REPL for gRPC introspection and manual testing.&lt;/p&gt;

&lt;p&gt;To conclude, I would highly recommend everyone to try out gRPC and start migrating to gRPC in production.&lt;/p&gt;

&lt;p&gt;If you are interested in working with cutting-edge technologies, come work with us. Apply &lt;a href=&quot;https://angel.co/company/vernacular-ai/jobs&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</content><author><name>Mithun Arunan</name></author><category term="Engineering" /><category term="grpc" /><category term="load balancing" /><category term="microservices" /><category term="interservice communication" /><summary type="html">Vernacular.ai processes millions of speech recognition requests every day, and to handle such a load we have focused on building a highly scalable technical stack.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/posts/fast-microservices-with-grpc/highway.png" /><media:content medium="image" url="/assets/images/posts/fast-microservices-with-grpc/highway.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">A REPL for Conversations</title><link href="/repl-conversations/" rel="alternate" type="text/html" title="A REPL for Conversations" /><published>2020-01-30T00:00:00+00:00</published><updated>2020-01-30T00:00:00+00:00</updated><id>/repl-conversations</id><content type="html" xml:base="/repl-conversations/">&lt;p&gt;A REPL, in programming, is an interactive environment where a programmer
can go through the cycle of writing code, getting it &lt;em&gt;Read&lt;/em&gt;,
&lt;em&gt;Evaluated&lt;/em&gt;, output &lt;em&gt;Printed&lt;/em&gt; and then back in a &lt;em&gt;Loop&lt;/em&gt;. Fundamentally,
a REPL merges &lt;em&gt;usage&lt;/em&gt; and &lt;em&gt;extension&lt;/em&gt; of a system in a single interface.
This merger has been important in providing easy extensibility to the
end programmers in many programming languages.&lt;/p&gt;

&lt;h1 id=&quot;interaction-is-supervision&quot;&gt;Interaction is supervision&lt;/h1&gt;

&lt;p&gt;We can envision a similar merger in human intelligence involving
languages. After getting to a certain level of language understanding,
our interactive behavior can be manipulated itself by interactions.
Interactions cover all possible &lt;em&gt;dialogs&lt;/em&gt;. Manipulative interactions or
supervision, as we like to call it, cover whatever is involved in
updating the state of the internal model which, in turn, affects the
behavior.&lt;/p&gt;

&lt;p&gt;Most of the machine dialog platforms aren't designed to expose this
equivalence explicitly. We have a different &lt;em&gt;language&lt;/em&gt; for providing
supervision and different for building the interaction experiences and
that's it. Consider the chatbots you see on various websites these
days. These have an interaction language which is a natural language,
and a separate supervision language which stays at the programmer's
beck in the background. I can't improve my personal interaction with
the system or extend it's behavior by talking to it. I can do that with
a human agent easily.&lt;/p&gt;

&lt;p&gt;We definitely are moving towards such systems by adding control knobs
piece by piece. But still aren't looking very actively for a general
framework of &lt;em&gt;user initiated supervision&lt;/em&gt;. Practically this is not going
to be immediately helpful for many reasons known to all of us working in
the field, but it's helpful to define various kinds of platforms for
machine dialog involving users on a continuum who all &lt;em&gt;program&lt;/em&gt; their
desired changes using their own interactive languages.&lt;/p&gt;

&lt;p&gt;From the technical side, of course there are problems that need to be
solved for this. Since natural languages are already there, as compared
to a language &lt;em&gt;to be designed&lt;/em&gt;, this needs a lot of work in
understanding and creating computational models of &lt;a href=&quot;https://en.wikipedia.org/wiki/Language_acquisition&quot;&gt;language
acquisition&lt;/a&gt; from
one end and works in zero and few shot learnings from the other.&lt;/p&gt;

&lt;p&gt;Sublanguages are still going to be the more efficient way for working at
a certain level, just like mathematical notations are for talking about
mathematics, but we can target a natural language REPL layer on top of
current dialog platforms and aim for a sort of interactive malleability
for growing the system organically afterwards.&lt;/p&gt;

&lt;h1 id=&quot;growing-a-conversational-agent&quot;&gt;Growing a conversational agent&lt;/h1&gt;

&lt;p&gt;This malleability is not only a learning but also design problem at the
moment&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. A problem similar to designing a programming language. What
we want the language user to accomplish is our focus right now. How we
can let the language itself grow is a problem we will be designing
systems for in the future. Once this interaction language is capable
enough, we can have an ecosystem of extensions and libraries making a
minimal system malleable enough to allow building drastically different
experiences on top of it.&lt;/p&gt;

&lt;p&gt;And it’s important that the system accepts growth at various levels if it has to
generalize across many use cases. In his talk ‘&lt;a href=&quot;https://www.youtube.com/watch?v=lw6TaiXzHAE&quot;&gt;Growing a Language&lt;/a&gt;’, Guy L.
Steele cites lack of this growth as the difference between APL and Lisp. In APL
“there was no way for a user to grow the language in a smooth way”. The
smoothness here focuses on extensibility in terms of language primitives. From
the same talk:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If I want to help other persons to write all sorts of programs, should
I design a small programming language or a large one?&lt;/p&gt;

  &lt;p&gt;I stand on this claim: I should not design a small language, and I
should not design a large one. I need to design a language that can
grow. I need to plan ways in which it might grow—but I need, too, to
leave some choices so that other persons can make those choices at a
later time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;Conversational systems are interesting from many more angles than just
what their components look like at the moment, which includes Speech To
Text, Language Understanding, Dialog Management, Text To Speech, etc.
Improving metrics under the current framework is a decent and important
goal, but there are many interesting challenges in the design aspects of
how we build and let others build conversational experiences themselves.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Many researches in self learning systems are orthogonal here as
you can have low generalization and still make a natural language
REPL. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Abhinav Tushar</name></author><category term="Machine Learning" /><summary type="html">A REPL, in programming, is an interactive environment where a programmer can go through the cycle of writing code, getting it Read, Evaluated, output Printed and then back in a Loop. Fundamentally, a REPL merges usage and extension of a system in a single interface. This merger has been important in providing easy extensibility to the end programmers in many programming languages.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/demo1.jpg" /><media:content medium="image" url="/assets/images/demo1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>